<?xml version="1.0" encoding="UTF-8"?>
  <beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:context="http://www.springframework.org/schema/context"  
  	xsi:schemaLocation="http://www.springframework.org/schema/beans 
  	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.0.xsd 
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
 	
 	<context:annotation-config />
       <!-- 把标记了@Controller注解的类转换为bean -->  
      <context:component-scan base-package="com.mvc.footprints.controller" />  
  <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->  
  	  <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/> 
      <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >
      	<property name="messageConverters">
      		<list>
      			<bean id="utf8StringHttpMessageConverter" class="com.mvc.footprints.constant.UTF8StringHttpMessageConverter"></bean>
      		</list>
      	</property>
      </bean>  

       <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->  
       <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"  
          p:prefix="/WEB-INF/view/" p:suffix=".jsp" />  
        <mvc:resources location="/jeasyui/" mapping="/jeasyui/**" />
        <mvc:resources location="/script/" mapping="/script/**" />
<!--        <bean id="multipartResolver"   -->
<!--           class="org.springframework.web.multipart.commons.CommonsMultipartResolver"   -->
<!--           p:defaultEncoding="utf-8" />   -->
          
       <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="UTF-8"/>  
        <!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
        <property name="maxUploadSize" value="1073741824"/>  
    </bean>  
      
    <!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->  
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->  
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->  
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error/404</prop>  
            </props>  
        </property>  
    </bean>  
       <!-- springmvc传json值时的乱码解决 -->
<!--   <mvc:annotation-driven> -->
<!--       <mvc:message-converters> -->
<!--           <bean class="org.springframework.http.converter.StringHttpMessageConverter"> -->
<!--               <property name="supportedMediaTypes"> -->
<!--                   <list> -->
<!--                       <value>application/json;charset=UTF-8</value> -->
<!--                   </list> -->
<!--               </property> -->
<!--           </bean> -->
<!--       </mvc:message-converters> -->
<!--   </mvc:annotation-driven> -->
<!-- <mvc:annotation-driven> -->
<!--         <mvc:message-converters register-defaults="true"> -->
<!--             <bean class="org.springframework.http.converter.StringHttpMessageConverter"> -->
<!--                 <constructor-arg value="UTF-8" /> -->
<!--             </bean> -->
<!--             <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> -->
<!--                 <property name="objectMapper"> -->
<!--                      <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean"> -->
<!--                          <property name="failOnEmptyBeans" value="false" /> -->
<!--                      </bean> -->
<!--                  </property> -->
<!--             </bean> -->
<!--         </mvc:message-converters> -->
<!--     </mvc:annotation-driven> -->
 </beans>